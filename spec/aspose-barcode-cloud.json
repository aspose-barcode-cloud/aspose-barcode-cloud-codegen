{
  "openapi": "3.0.4",
  "info": {
    "title": "Aspose.BarCode.Cloud v4.0 Specification",
    "description": "High quality barcodes generation and recognition API",
    "version": "4.0"
  },
  "servers": [
    {
      "url": "https://api.aspose.cloud/v4.0"
    }
  ],
  "paths": {
    "/barcode/generate/{barcodeType}": {
      "get": {
        "tags": [
          "Generate"
        ],
        "summary": "Generate barcode using GET request with parameters in route and query string.",
        "operationId": "Generate",
        "parameters": [
          {
            "name": "barcodeType",
            "in": "path",
            "description": "Type of barcode to generate.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EncodeBarcodeType"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "Type of data to encode.\nDefault value: StringData.",
            "schema": {
              "$ref": "#/components/schemas/EncodeDataType"
            }
          },
          {
            "name": "data",
            "in": "query",
            "description": "String represents data to encode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageFormat",
            "in": "query",
            "description": "Barcode output image format.\nDefault value: png",
            "schema": {
              "$ref": "#/components/schemas/BarcodeImageFormat"
            }
          },
          {
            "name": "textLocation",
            "in": "query",
            "description": "Specify the displaying Text Location, set to CodeLocation.None to hide CodeText.\nDefault value: Depends on BarcodeType. CodeLocation.Below for 1D Barcodes. CodeLocation.None for 2D Barcodes.",
            "schema": {
              "$ref": "#/components/schemas/CodeLocation"
            }
          },
          {
            "name": "foregroundColor",
            "in": "query",
            "description": "Specify the displaying bars and content Color.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: Black.",
            "schema": {
              "type": "string",
              "default": "Black"
            }
          },
          {
            "name": "backgroundColor",
            "in": "query",
            "description": "Background color of the barcode image.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: White.",
            "schema": {
              "type": "string",
              "default": "White"
            }
          },
          {
            "name": "units",
            "in": "query",
            "description": "Common Units for all measuring in query. Default units: pixel.",
            "schema": {
              "$ref": "#/components/schemas/GraphicsUnit"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "Resolution of the BarCode image.\nOne value for both dimensions.\nDefault value: 96 dpi.\nDecimal separator is dot.",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "imageHeight",
            "in": "query",
            "description": "Height of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "imageWidth",
            "in": "query",
            "description": "Width of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "rotationAngle",
            "in": "query",
            "description": "BarCode image rotation angle, measured in degree, e.g. RotationAngle = 0 or RotationAngle = 360 means no rotation.\nIf RotationAngle NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image.\nDefault value: 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/bmp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/tiff": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-binary-result": true
      }
    },
    "/barcode/generate-multipart": {
      "post": {
        "tags": [
          "Generate"
        ],
        "summary": "Generate barcode using POST request with parameters in multipart form.",
        "operationId": "GenerateMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "barcodeType",
                  "data"
                ],
                "type": "object",
                "properties": {
                  "barcodeType": {
                    "$ref": "#/components/schemas/EncodeBarcodeType"
                  },
                  "dataType": {
                    "$ref": "#/components/schemas/EncodeDataType"
                  },
                  "data": {
                    "type": "string",
                    "description": "String represents data to encode"
                  },
                  "imageFormat": {
                    "$ref": "#/components/schemas/BarcodeImageFormat"
                  },
                  "textLocation": {
                    "$ref": "#/components/schemas/CodeLocation"
                  },
                  "foregroundColor": {
                    "type": "string",
                    "description": "Specify the displaying bars and content Color.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: Black.",
                    "default": "Black"
                  },
                  "backgroundColor": {
                    "type": "string",
                    "description": "Background color of the barcode image.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: White.",
                    "default": "White"
                  },
                  "units": {
                    "$ref": "#/components/schemas/GraphicsUnit"
                  },
                  "resolution": {
                    "maximum": 100000,
                    "minimum": 1,
                    "type": "number",
                    "description": "Resolution of the BarCode image.\nOne value for both dimensions.\nDefault value: 96 dpi.\nDecimal separator is dot.",
                    "format": "float"
                  },
                  "imageHeight": {
                    "type": "number",
                    "description": "Height of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
                    "format": "float"
                  },
                  "imageWidth": {
                    "type": "number",
                    "description": "Width of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
                    "format": "float"
                  },
                  "rotationAngle": {
                    "type": "integer",
                    "description": "BarCode image rotation angle, measured in degree, e.g. RotationAngle = 0 or RotationAngle = 360 means no rotation.\nIf RotationAngle NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image.\nDefault value: 0.",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "barcodeType": {
                  "style": "form"
                },
                "dataType": {
                  "style": "form"
                },
                "data": {
                  "style": "form"
                },
                "imageFormat": {
                  "style": "form"
                },
                "textLocation": {
                  "style": "form"
                },
                "foregroundColor": {
                  "style": "form"
                },
                "backgroundColor": {
                  "style": "form"
                },
                "units": {
                  "style": "form"
                },
                "resolution": {
                  "style": "form"
                },
                "imageHeight": {
                  "style": "form"
                },
                "imageWidth": {
                  "style": "form"
                },
                "rotationAngle": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/bmp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/tiff": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-binary-result": true
      }
    },
    "/barcode/generate-body": {
      "post": {
        "tags": [
          "Generate"
        ],
        "summary": "Generate barcode using POST request with parameters in body in json or xml format.",
        "operationId": "GenerateBody",
        "requestBody": {
          "description": "Parameters of generation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateParams"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/bmp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/tiff": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-binary-result": true
      }
    },
    "/barcode/recognize": {
      "get": {
        "tags": [
          "Recognize"
        ],
        "summary": "Recognize barcode from file on server in the Internet using GET requests with parameter in query string.\nFor recognizing files from your hard drive use `recognize-body` or `recognize-multipart` endpoints instead.",
        "operationId": "Recognize",
        "parameters": [
          {
            "name": "barcodeType",
            "in": "query",
            "description": "Type of barcode to recognize",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DecodeBarcodeType"
            }
          },
          {
            "name": "fileUrl",
            "in": "query",
            "description": "Url to barcode image",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "recognitionMode",
            "in": "query",
            "description": "Recognition mode",
            "schema": {
              "$ref": "#/components/schemas/RecognitionMode"
            }
          },
          {
            "name": "recognitionImageKind",
            "in": "query",
            "description": "Image kind for recognition",
            "schema": {
              "$ref": "#/components/schemas/RecognitionImageKind"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/recognize-body": {
      "post": {
        "tags": [
          "Recognize"
        ],
        "summary": "Recognize barcode from file in request body using POST requests with parameters in body in json or xml format.",
        "operationId": "RecognizeBase64",
        "requestBody": {
          "description": "Barcode recognition request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecognizeBase64Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RecognizeBase64Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/recognize-multipart": {
      "post": {
        "tags": [
          "Recognize"
        ],
        "summary": "Recognize barcode from file in request body using POST requests with parameters in multipart form.",
        "operationId": "RecognizeMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "barcodeType",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "barcodeType": {
                    "$ref": "#/components/schemas/DecodeBarcodeType"
                  },
                  "file": {
                    "type": "string",
                    "description": "Barcode image file",
                    "format": "binary"
                  },
                  "recognitionMode": {
                    "$ref": "#/components/schemas/RecognitionMode"
                  },
                  "recognitionImageKind": {
                    "$ref": "#/components/schemas/RecognitionImageKind"
                  }
                }
              },
              "encoding": {
                "barcodeType": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                },
                "recognitionMode": {
                  "style": "form"
                },
                "recognitionImageKind": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/scan": {
      "get": {
        "tags": [
          "Scan"
        ],
        "summary": "Scan barcode from file on server in the Internet using GET requests with parameter in query string.\nFor scaning files from your hard drive use `scan-body` or `scan-multipart` endpoints instead.",
        "operationId": "Scan",
        "parameters": [
          {
            "name": "fileUrl",
            "in": "query",
            "description": "Url to barcode image",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/scan-body": {
      "post": {
        "tags": [
          "Scan"
        ],
        "summary": "Scan barcode from file in request body using POST requests with parameter in body in json or xml format.",
        "operationId": "ScanBase64",
        "requestBody": {
          "description": "Barcode scan request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanBase64Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScanBase64Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/scan-multipart": {
      "post": {
        "tags": [
          "Scan"
        ],
        "summary": "Scan barcode from file in request body using POST requests with parameter in multipart form.",
        "operationId": "ScanMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Barcode image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeResponseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or sets api error code.",
            "nullable": true,
            "xml": {
              "name": "Code"
            }
          },
          "message": {
            "type": "string",
            "description": "Gets or sets error message.",
            "nullable": true,
            "xml": {
              "name": "Message"
            }
          },
          "description": {
            "type": "string",
            "description": "Gets or sets error description.",
            "nullable": true,
            "xml": {
              "name": "Description"
            }
          },
          "dateTime": {
            "type": "string",
            "description": "Gets or sets server datetime.",
            "format": "date-time",
            "nullable": true,
            "xml": {
              "name": "DateTime"
            }
          },
          "innerError": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false,
        "description": "Api Error.",
        "xml": {
          "name": "ApiError"
        }
      },
      "ApiErrorResponse": {
        "required": [
          "error",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Gets or sets request Id.",
            "nullable": true,
            "xml": {
              "name": "RequestId"
            }
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false,
        "description": "ApiError Response",
        "xml": {
          "name": "ApiErrorResponse"
        }
      },
      "BarcodeImageFormat": {
        "enum": [
          "Png",
          "Jpeg",
          "Svg",
          "Tiff",
          "Gif"
        ],
        "type": "string",
        "description": "Specifies the file format of the image.",
        "xml": {
          "name": "ImageFormat"
        }
      },
      "BarcodeImageParams": {
        "type": "object",
        "properties": {
          "imageFormat": {
            "$ref": "#/components/schemas/BarcodeImageFormat"
          },
          "textLocation": {
            "$ref": "#/components/schemas/CodeLocation"
          },
          "foregroundColor": {
            "type": "string",
            "description": "Specify the displaying bars and content Color.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: Black.",
            "default": "Black",
            "nullable": true,
            "xml": {
              "name": "ForegroundColor"
            }
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color of the barcode image.\nValue: Color name from https://reference.aspose.com/drawing/net/system.drawing/color/ or ARGB value started with #.\nFor example: AliceBlue or #FF000000\nDefault value: White.",
            "default": "White",
            "nullable": true,
            "xml": {
              "name": "BackgroundColor"
            }
          },
          "units": {
            "$ref": "#/components/schemas/GraphicsUnit"
          },
          "resolution": {
            "maximum": 100000,
            "minimum": 1,
            "type": "number",
            "description": "Resolution of the BarCode image.\nOne value for both dimensions.\nDefault value: 96 dpi.\nDecimal separator is dot.",
            "format": "float",
            "nullable": true,
            "xml": {
              "name": "Resolution"
            },
            "example": 96
          },
          "imageHeight": {
            "type": "number",
            "description": "Height of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
            "format": "float",
            "nullable": true,
            "xml": {
              "name": "ImageHeight"
            },
            "example": 200
          },
          "imageWidth": {
            "type": "number",
            "description": "Width of the barcode image in given units. Default units: pixel.\nDecimal separator is dot.",
            "format": "float",
            "nullable": true,
            "xml": {
              "name": "ImageWidth"
            },
            "example": 200
          },
          "rotationAngle": {
            "type": "integer",
            "description": "BarCode image rotation angle, measured in degree, e.g. RotationAngle = 0 or RotationAngle = 360 means no rotation.\nIf RotationAngle NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image.\nDefault value: 0.",
            "format": "int32",
            "nullable": true,
            "xml": {
              "name": "RotationAngle"
            }
          }
        },
        "additionalProperties": false,
        "description": "Barcode image optional parameters",
        "xml": {
          "name": "BarcodeImageParams"
        }
      },
      "BarcodeResponse": {
        "type": "object",
        "properties": {
          "barcodeValue": {
            "type": "string",
            "description": "Barcode data.",
            "nullable": true,
            "xml": {
              "name": "BarcodeValue"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the barcode.",
            "nullable": true,
            "xml": {
              "name": "Type"
            }
          },
          "region": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionPoint"
            },
            "description": "Region with barcode.",
            "nullable": true,
            "xml": {
              "name": "Region",
              "wrapped": true
            }
          },
          "checksum": {
            "type": "string",
            "description": "Checksum of barcode.",
            "nullable": true,
            "xml": {
              "name": "Checksum"
            }
          }
        },
        "additionalProperties": false,
        "description": "Represents information about barcode.",
        "xml": {
          "name": "BarcodeResponse"
        }
      },
      "BarcodeResponseList": {
        "required": [
          "barcodes"
        ],
        "type": "object",
        "properties": {
          "barcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarcodeResponse"
            },
            "description": "List of barcodes which are present in image.",
            "nullable": true,
            "xml": {
              "name": "Barcodes",
              "wrapped": true
            }
          }
        },
        "additionalProperties": false,
        "description": "Represents information about barcode list.",
        "xml": {
          "name": "BarcodeResponseList"
        }
      },
      "CodeLocation": {
        "enum": [
          "Below",
          "Above",
          "None"
        ],
        "type": "string",
        "xml": {
          "name": "TextLocation"
        }
      },
      "DecodeBarcodeType": {
        "enum": [
          "MostCommonlyUsed",
          "QR",
          "AustraliaPost",
          "AustralianPosteParcel",
          "Aztec",
          "Codabar",
          "CodablockF",
          "Code11",
          "Code128",
          "Code16K",
          "Code32",
          "Code39",
          "Code39FullASCII",
          "Code93",
          "CompactPdf417",
          "DataLogic2of5",
          "DataMatrix",
          "DatabarExpanded",
          "DatabarExpandedStacked",
          "DatabarLimited",
          "DatabarOmniDirectional",
          "DatabarStacked",
          "DatabarStackedOmniDirectional",
          "DatabarTruncated",
          "DeutschePostIdentcode",
          "DeutschePostLeitcode",
          "DotCode",
          "DutchKIX",
          "EAN13",
          "EAN14",
          "EAN8",
          "GS1Aztec",
          "GS1Code128",
          "GS1CompositeBar",
          "GS1DataMatrix",
          "GS1DotCode",
          "GS1HanXin",
          "GS1MicroPdf417",
          "GS1QR",
          "HanXin",
          "HIBCAztecLIC",
          "HIBCAztecPAS",
          "HIBCCode128LIC",
          "HIBCCode128PAS",
          "HIBCCode39LIC",
          "HIBCCode39PAS",
          "HIBCDataMatrixLIC",
          "HIBCDataMatrixPAS",
          "HIBCQRLIC",
          "HIBCQRPAS",
          "IATA2of5",
          "ISBN",
          "ISMN",
          "ISSN",
          "ITF14",
          "ITF6",
          "Interleaved2of5",
          "ItalianPost25",
          "MacroPdf417",
          "Mailmark",
          "Matrix2of5",
          "MaxiCode",
          "MicrE13B",
          "MicroPdf417",
          "MicroQR",
          "MSI",
          "OneCode",
          "OPC",
          "PatchCode",
          "Pdf417",
          "Pharmacode",
          "Planet",
          "Postnet",
          "PZN",
          "RectMicroQR",
          "RM4SCC",
          "SCC14",
          "SSCC18",
          "Standard2of5",
          "Supplement",
          "SwissPostParcel",
          "UPCA",
          "UPCE",
          "VIN"
        ],
        "type": "string",
        "description": "See Aspose.BarCode.Aspose.BarCode.BarCodeRecognition.DecodeType",
        "xml": {
          "name": "DecodeBarcodeType"
        }
      },
      "EncodeBarcodeType": {
        "enum": [
          "QR",
          "AustraliaPost",
          "AustralianPosteParcel",
          "Aztec",
          "Codabar",
          "CodablockF",
          "Code11",
          "Code128",
          "Code16K",
          "Code32",
          "Code39",
          "Code39FullASCII",
          "Code93",
          "DataLogic2of5",
          "DataMatrix",
          "DatabarExpanded",
          "DatabarExpandedStacked",
          "DatabarLimited",
          "DatabarOmniDirectional",
          "DatabarStacked",
          "DatabarStackedOmniDirectional",
          "DatabarTruncated",
          "DeutschePostIdentcode",
          "DeutschePostLeitcode",
          "DotCode",
          "DutchKIX",
          "EAN13",
          "EAN14",
          "EAN8",
          "GS1Aztec",
          "GS1CodablockF",
          "GS1Code128",
          "GS1DataMatrix",
          "GS1DotCode",
          "GS1HanXin",
          "GS1MicroPdf417",
          "GS1QR",
          "HanXin",
          "IATA2of5",
          "ISBN",
          "ISMN",
          "ISSN",
          "ITF14",
          "ITF6",
          "Interleaved2of5",
          "ItalianPost25",
          "MSI",
          "MacroPdf417",
          "Mailmark",
          "Matrix2of5",
          "MaxiCode",
          "MicroPdf417",
          "MicroQR",
          "OPC",
          "OneCode",
          "PZN",
          "PatchCode",
          "Pdf417",
          "Pharmacode",
          "Planet",
          "Postnet",
          "RM4SCC",
          "RectMicroQR",
          "SCC14",
          "SSCC18",
          "SingaporePost",
          "Standard2of5",
          "SwissPostParcel",
          "UPCA",
          "UPCE",
          "UpcaGs1Code128Coupon",
          "UpcaGs1DatabarCoupon",
          "VIN"
        ],
        "type": "string",
        "description": "See Aspose.BarCode.Generation.EncodeTypes",
        "xml": {
          "name": "BarcodeType"
        }
      },
      "EncodeData": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "dataType": {
            "$ref": "#/components/schemas/EncodeDataType"
          },
          "data": {
            "minLength": 1,
            "type": "string",
            "description": "String represents data to encode",
            "xml": {
              "name": "Data"
            }
          }
        },
        "additionalProperties": false,
        "description": "Data to encode in barcode",
        "xml": {
          "name": "EncodeData"
        }
      },
      "EncodeDataType": {
        "enum": [
          "StringData",
          "Base64Bytes",
          "HexBytes"
        ],
        "type": "string",
        "description": "Types of data can be encoded to barcode",
        "xml": {
          "name": "DataType"
        }
      },
      "GenerateParams": {
        "required": [
          "barcodeType",
          "encodeData"
        ],
        "type": "object",
        "properties": {
          "barcodeType": {
            "$ref": "#/components/schemas/EncodeBarcodeType"
          },
          "encodeData": {
            "$ref": "#/components/schemas/EncodeData"
          },
          "barcodeImageParams": {
            "$ref": "#/components/schemas/BarcodeImageParams"
          }
        },
        "additionalProperties": false,
        "description": "Barcode generation parameters",
        "xml": {
          "name": "GenerateParams"
        }
      },
      "GraphicsUnit": {
        "enum": [
          "Pixel",
          "Point",
          "Inch",
          "Millimeter"
        ],
        "type": "string",
        "description": "Subset of Aspose.Drawing.GraphicsUnit.",
        "xml": {
          "name": "Units"
        }
      },
      "RecognitionImageKind": {
        "enum": [
          "Photo",
          "ScannedDocument",
          "ClearImage"
        ],
        "type": "string",
        "description": "Kind of image to recognize",
        "xml": {
          "name": "RecognitionImageKind"
        }
      },
      "RecognitionMode": {
        "enum": [
          "Fast",
          "Normal",
          "Excellent"
        ],
        "type": "string",
        "description": "Recognition mode.",
        "xml": {
          "name": "RecognitionMode"
        }
      },
      "RecognizeBase64Request": {
        "required": [
          "barcodeTypes",
          "fileBase64"
        ],
        "type": "object",
        "properties": {
          "barcodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DecodeBarcodeType"
            },
            "description": "Array of decode types to find on barcode",
            "xml": {
              "name": "BarcodeTypes",
              "wrapped": true
            }
          },
          "fileBase64": {
            "maxLength": 28730982,
            "minLength": 1,
            "type": "string",
            "description": "Barcode image bytes encoded as base-64.",
            "xml": {
              "name": "FileBase64"
            }
          },
          "recognitionMode": {
            "$ref": "#/components/schemas/RecognitionMode"
          },
          "recognitionImageKind": {
            "$ref": "#/components/schemas/RecognitionImageKind"
          }
        },
        "additionalProperties": false,
        "description": "Barcode recognize request",
        "xml": {
          "name": "RecognizeBase64Request"
        }
      },
      "RegionPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "description": "X-coordinate",
            "format": "int32",
            "xml": {
              "name": "X"
            }
          },
          "y": {
            "type": "integer",
            "description": "Y-coordinate",
            "format": "int32",
            "xml": {
              "name": "Y"
            }
          }
        },
        "additionalProperties": false,
        "description": "Wrapper around Drawing.Point for proper specification.",
        "xml": {
          "name": "Point"
        }
      },
      "ScanBase64Request": {
        "required": [
          "fileBase64"
        ],
        "type": "object",
        "properties": {
          "fileBase64": {
            "minLength": 1,
            "type": "string",
            "description": "Barcode image bytes encoded as base-64.",
            "xml": {
              "name": "FileBase64"
            }
          }
        },
        "additionalProperties": false,
        "description": "Scan barcode request.",
        "xml": {
          "name": "ScanBase64Request"
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "oauth2",
        "description": "JWT Authorization header using the Bearer scheme.\n\nGo to https://dashboard.aspose.cloud/#/applications and choose application.\n\nUse client_id and client_secret from selected application to authorize and get AccessToken.\n\nAdd AccessToken to Authorization header in form 'Bearer [space] and then your token'.\n\nExample: 'Authorization: Bearer 12345abcdef'.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.aspose.cloud/connect/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "JWT": [ ]
    }
  ]
}